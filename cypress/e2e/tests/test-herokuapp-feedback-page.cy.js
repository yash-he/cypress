/// <reference types="cypress" />

import { LandingPage } from "../page_objects/landing_page"
import { CustomerFeedbackPage } from "../page_objects/customer_feecback_page"
import { ValidateByImplicitAssertion } from "../assertions/validator"

const landing_page = new LandingPage()
const customer_feecback_page = new CustomerFeedbackPage()
const validator = new ValidateByImplicitAssertion()
const webPageUrl = Cypress.config().baseUrl

describe('Assignment Test Suite', () => {

    it('NavigateToFeedbackPage', () => {
        validator.requestIntercept('GET', '/', 'apiCheck')
        validator.requestIntercept('GET', 'rest/user/whoami', 'apiCheck2')
        validator.requestIntercept('GET', '/rest/captcha/', 'apiCheck3')
        landing_page.goToLandingPage(webPageUrl)
        landing_page.clickAcceptCookie()
        landing_page.closePopUp()
        landing_page.clickDrawerMenu()
        landing_page.goToCustomerFeedbackPage()
        validator.verifyStatusCodeWithInterceptor('@apiCheck', 200)
        validator.verifyStatusCodeWithInterceptor('@apiCheck2', 200)
        validator.verifyStatusCodeWithInterceptor('@apiCheck3', 200)
        let headerObj = customer_feecback_page.getPageHeader()
        validator.containText(headerObj, 'Customer Feedback')
    })

    it('ValidateAuthorFiledIsFreezedForAnonymousUser', () => {
        validator.requestIntercept('GET', '/', 'apiCheck')
        validator.requestIntercept('GET', 'rest/user/whoami', 'apiCheck2')
        validator.requestIntercept('GET', '/rest/captcha/', 'apiCheck3')
        landing_page.goToLandingPage(webPageUrl)
        landing_page.clickAcceptCookie()
        landing_page.closePopUp()
        landing_page.clickDrawerMenu()
        landing_page.goToCustomerFeedbackPage()
        let headerObj = customer_feecback_page.getPageHeader()
        validator.containText(headerObj, 'Customer Feedback')
        let authorInputobj = customer_feecback_page.getAuthorInputTextField()
        validator.inputFieldIsFreezed(authorInputobj)
        validator.verifyStatusCodeWithInterceptor('@apiCheck', 200)
        validator.verifyStatusCodeWithInterceptor('@apiCheck2', 200)
        validator.verifyStatusCodeWithInterceptor('@apiCheck3', 200)
    })

    it('ValidateCommentFieldIsEnabledForAnonymousUser', () => {
        validator.requestIntercept('GET', '/', 'apiCheck')
        validator.requestIntercept('GET', 'rest/user/whoami', 'apiCheck2')
        validator.requestIntercept('GET', '/rest/captcha/', 'apiCheck3')
        landing_page.goToLandingPage(webPageUrl)
        landing_page.clickAcceptCookie()
        landing_page.closePopUp()
        landing_page.clickDrawerMenu()
        landing_page.goToCustomerFeedbackPage()
        let headerObj = customer_feecback_page.getPageHeader()
        validator.containText(headerObj, 'Customer Feedback')
        let commentInputobj = customer_feecback_page.getCommentInputTextField()
        validator.inputFieldIsUnFreezed(commentInputobj)
        validator.verifyStatusCodeWithInterceptor('@apiCheck', 200)
        validator.verifyStatusCodeWithInterceptor('@apiCheck2', 200)
        validator.verifyStatusCodeWithInterceptor('@apiCheck3', 200)
    })

    it('ValidateCommentFieldCharLimitGetsDecrement', () => {
        validator.requestIntercept('GET', '/', 'apiCheck')
        validator.requestIntercept('GET', 'rest/user/whoami', 'apiCheck2')
        validator.requestIntercept('GET', '/rest/captcha/', 'apiCheck3')
        landing_page.goToLandingPage(webPageUrl)
        landing_page.clickAcceptCookie()
        landing_page.closePopUp()
        landing_page.clickDrawerMenu()
        landing_page.goToCustomerFeedbackPage()
        let headerObj = customer_feecback_page.getPageHeader()
        validator.containText(headerObj, 'Customer Feedback')
        let commentInputobj = customer_feecback_page.getCommentInputTextField()
        validator.inputFieldIsUnFreezed(commentInputobj)
        customer_feecback_page.enterTextIntoInputField(commentInputobj, 'Test comments')
        let hint = customer_feecback_page.getCharLimitHintInComment()
        validator.containText(hint, '13')
        validator.verifyStatusCodeWithInterceptor('@apiCheck', 200)
        validator.verifyStatusCodeWithInterceptor('@apiCheck2', 200)
        validator.verifyStatusCodeWithInterceptor('@apiCheck3', 200)
    })

    it('ValidateRatingSliderBarForRating-3', () => {
        validator.requestIntercept('GET', '/', 'apiCheck')
        validator.requestIntercept('GET', 'rest/user/whoami', 'apiCheck2')
        validator.requestIntercept('GET', '/rest/captcha/', 'apiCheck3')
        landing_page.goToLandingPage(webPageUrl)
        landing_page.clickAcceptCookie()
        landing_page.closePopUp()
        landing_page.clickDrawerMenu()
        landing_page.goToCustomerFeedbackPage()
        let headerObj = customer_feecback_page.getPageHeader()
        validator.containText(headerObj, 'Customer Feedback')
        let commentInputobj = customer_feecback_page.getCommentInputTextField()
        validator.inputFieldIsUnFreezed(commentInputobj)
        customer_feecback_page.enterTextIntoInputField(commentInputobj, 'Test comments')
        customer_feecback_page.clickOnSliderThumb(3)
        let currentSliderPosObj = customer_feecback_page.getCurrentPositionOfSliderObj()
        validator.containText(currentSliderPosObj, '3')
        validator.verifyStatusCodeWithInterceptor('@apiCheck', 200)
        validator.verifyStatusCodeWithInterceptor('@apiCheck2', 200)
        validator.verifyStatusCodeWithInterceptor('@apiCheck3', 200)
    })

    it('ValidateRatingSliderBarForRating-5', () => {
        validator.requestIntercept('GET', '/', 'apiCheck')
        validator.requestIntercept('GET', 'rest/user/whoami', 'apiCheck2')
        validator.requestIntercept('GET', '/rest/captcha/', 'apiCheck3')
        landing_page.goToLandingPage(webPageUrl)
        landing_page.clickAcceptCookie()
        landing_page.closePopUp()
        landing_page.clickDrawerMenu()
        landing_page.goToCustomerFeedbackPage()
        let headerObj = customer_feecback_page.getPageHeader()
        validator.containText(headerObj, 'Customer Feedback')
        let commentInputobj = customer_feecback_page.getCommentInputTextField()
        validator.inputFieldIsUnFreezed(commentInputobj)
        customer_feecback_page.enterTextIntoInputField(commentInputobj, 'Test comments')
        customer_feecback_page.clickOnSliderThumb(5)
        let currentSliderPosObj = customer_feecback_page.getCurrentPositionOfSliderObj()
        validator.containText(currentSliderPosObj, '5')
        validator.verifyStatusCodeWithInterceptor('@apiCheck', 200)
        validator.verifyStatusCodeWithInterceptor('@apiCheck2', 200)
        validator.verifyStatusCodeWithInterceptor('@apiCheck3', 200)
    })

    it('ValidateSubmitButtomIsDisabledWhenCaptchaEnteredIsInvalid', () => {
        validator.requestIntercept('GET', '/', 'apiCheck')
        validator.requestIntercept('GET', 'rest/user/whoami', 'apiCheck2')
        validator.requestIntercept('GET', '/rest/captcha/', 'apiCheck3')
        landing_page.goToLandingPage(webPageUrl)
        landing_page.clickAcceptCookie()
        landing_page.closePopUp()
        landing_page.clickDrawerMenu()
        landing_page.goToCustomerFeedbackPage()
        let headerObj = customer_feecback_page.getPageHeader()
        validator.containText(headerObj, 'Customer Feedback')
        let commentInputobj = customer_feecback_page.getCommentInputTextField()
        validator.inputFieldIsUnFreezed(commentInputobj)
        customer_feecback_page.enterTextIntoInputField(commentInputobj, 'Test comments')
        customer_feecback_page.clickOnSliderThumb(5)
        let currentSliderPosObj = customer_feecback_page.getCurrentPositionOfSliderObj()
        validator.containText(currentSliderPosObj, '5')
        let captchaInputField = customer_feecback_page.getCaptchaResultTextInputField()
        customer_feecback_page.enterTextIntoInputField(captchaInputField, 'abc')
        let submitButton = customer_feecback_page.getSubmitButtonField()
        validator.buttonIsFreezed(submitButton)
        customer_feecback_page.clickOnPageHeader()
        let errorMsgObj = customer_feecback_page.getUIErrorMessageOnInvalidCaptchaType()
        validator.containText(errorMsgObj, 'Invalid')
        validator.verifyStatusCodeWithInterceptor('@apiCheck', 200)
        validator.verifyStatusCodeWithInterceptor('@apiCheck2', 200)
        validator.verifyStatusCodeWithInterceptor('@apiCheck3', 200)
    })

    it('ValidateErrorMessageWhenEnteredCaptchaIsWrongInteger', () => {
        validator.requestIntercept('GET', '/', 'apiCheck')
        validator.requestIntercept('GET', 'rest/user/whoami', 'apiCheck2')
        validator.requestIntercept('GET', '/rest/captcha/', 'apiCheck3')
        validator.requestIntercept('POST', '/api/Feedbacks/', 'apiCheck4')
        landing_page.goToLandingPage(webPageUrl)
        landing_page.clickAcceptCookie()
        landing_page.closePopUp()
        landing_page.clickDrawerMenu()
        landing_page.goToCustomerFeedbackPage()
        let headerObj = customer_feecback_page.getPageHeader()
        validator.containText(headerObj, 'Customer Feedback')
        let commentInputobj = customer_feecback_page.getCommentInputTextField()
        validator.inputFieldIsUnFreezed(commentInputobj)
        customer_feecback_page.enterTextIntoInputField(commentInputobj, 'Test comments')
        customer_feecback_page.clickOnSliderThumb(5)
        let currentSliderPosObj = customer_feecback_page.getCurrentPositionOfSliderObj()
        validator.containText(currentSliderPosObj, '5')
        let captchaInputField = customer_feecback_page.getCaptchaResultTextInputField()
        customer_feecback_page.enterTextIntoInputField(captchaInputField, '50000')
        let submitButton = customer_feecback_page.getSubmitButtonField()
        validator.buttonIsUnFreezed(submitButton)
        customer_feecback_page.clickSubmit()
        validator.verifyStatusCodeWithInterceptor('@apiCheck', 200)
        validator.verifyStatusCodeWithInterceptor('@apiCheck2', 200)
        validator.verifyStatusCodeWithInterceptor('@apiCheck3', 200)
        validator.verifyStatusCodeWithInterceptor('@apiCheck4', 401)
        let message = customer_feecback_page.getUIMessageOnSubmittingCaptchaCode()
        validator.containText(message, 'Wrong')
    })


    it('ValidateSuccessfullSubmissionOfFeebackWhenEnteredCaptchaIsValidInteger', () => {
        validator.requestIntercept('GET', '/', 'apiCheck')
        validator.requestIntercept('GET', 'rest/user/whoami', 'apiCheck2')
        validator.requestIntercept('GET', '/rest/captcha/', 'apiCheck3')
        validator.requestIntercept('POST', '/api/Feedbacks/', 'apiCheck4')
        landing_page.goToLandingPage(webPageUrl)
        landing_page.clickAcceptCookie()
        landing_page.closePopUp()
        landing_page.clickDrawerMenu()
        landing_page.goToCustomerFeedbackPage()
        let headerObj = customer_feecback_page.getPageHeader()
        validator.containText(headerObj, 'Customer Feedback')
        let commentInputobj = customer_feecback_page.getCommentInputTextField()
        validator.inputFieldIsUnFreezed(commentInputobj)
        customer_feecback_page.enterTextIntoInputField(commentInputobj, 'Test comments')
        customer_feecback_page.clickOnSliderThumb(5)
        let currentSliderPosObj = customer_feecback_page.getCurrentPositionOfSliderObj()
        validator.containText(currentSliderPosObj, '5')
        let captchaInputField = customer_feecback_page.getCaptchaResultTextInputField()
        customer_feecback_page.enterCaptchaTextComputedAnswer()
        let submitButton = customer_feecback_page.getSubmitButtonField()
        validator.buttonIsUnFreezed(submitButton)
        customer_feecback_page.clickSubmit()
        validator.verifyStatusCodeWithInterceptor('@apiCheck', 200)
        validator.verifyStatusCodeWithInterceptor('@apiCheck2', 200)
        validator.verifyStatusCodeWithInterceptor('@apiCheck3', 200)
        validator.verifyStatusCodeWithInterceptor('@apiCheck4', 201)
        let message = customer_feecback_page.getUIMessageOnSubmittingCaptchaCode()
        validator.containText(message, 'feedback')
    })
})